name: GitHub Pages
on:
  push:
    branches:
      - dev   # Unreleased branch (unstable)
      - docs  # Main branch for documentation

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Poetry
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false
          installer-parallel: true

      # MkDocs
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: poetry install --with docs
      - run: mmg -b ./mmg.yml

      # Set up Git
      - name: Commit Bot
        run: |
          git config --global user.name "GitHub Action[bot]"
          git config --global user.email "github-action[bot]@users.noreply.github.com"
      - name: Extract Pakcage Version
        id: mmg_version
        run: echo "VERSION=$(poetry version | cut -d' ' -f2)" >> $env:GITHUB_OUTPUT

      # Deploy with Mike (when dev branch is pushed)
      - run: poetry run mike deploy --push --update-aliases unstable
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/dev')
      # Deploy with Mike (when docs branch is pushed)
      - run: poetry run mike deploy --push --update-aliases ${{ steps.mmg_version.outputs.VERSION }} latest
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/docs')
