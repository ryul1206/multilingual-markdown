name: GitHub Pages
on:
  push:
    branches:
      - dev   # Unreleased branch (unstable)
      - docs  # Main branch for documentation

permissions:
  contents: write

jobs:
  deploy:
    if: ${{ endsWith(github.ref, 'refs/heads/dev') || endsWith(github.ref, 'refs/heads/docs') }}

    runs-on: ubuntu-latest
    steps:
      # Git pull (to prevent the fallowing error)
      # "Updates were rejected because the remote contains work that you do not have locally."
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Configure Git credentials
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      # Setup Python and uv
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.11"

      - name: Set up Python
        run: uv python install 3.11

      # MkDocs cache setup
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Install dependencies
        run: uv sync --group docs

      - name: Generate multi-language docs
        run: mmg -b ./mmg.yml

      - name: Extract Package Version
        id: mmg_version
        run: |
          VERSION=$(cat pyproject.toml | grep '^version = ' | cut -d'"' -f2)
          MAJOR_MINOR=$(echo $VERSION | cut -d. -f1,2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "MAJOR_MINOR=$MAJOR_MINOR" >> $GITHUB_OUTPUT

      # Deploy with Mike (when dev branch is pushed)
      - name: Deploy unstable docs
        if: github.event_name == 'push' && endsWith(github.ref, 'refs/heads/dev')
        run: uv run mike deploy --push --update-aliases unstable

      # Deploy with Mike (when docs branch is pushed)
      - name: Deploy stable docs
        if: github.event_name == 'push' && endsWith(github.ref, 'refs/heads/docs')
        run: uv run mike deploy ${{ steps.mmg_version.outputs.MAJOR_MINOR }} --push --title ${{ steps.mmg_version.outputs.VERSION }} --update-aliases latest
