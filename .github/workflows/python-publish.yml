# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Upload Python Package

on:
  push:
    branches:
      - rc
  release:
    types: [published]

jobs:
  pypi-publish:
    if: ${{ startsWith(github.ref, 'refs/heads/rc') || startsWith(github.ref, 'refs/tags') }}

    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mmg
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4

      # Setup Python and uv
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.11"

      - name: Set up Python
        run: uv python install 3.11

      # Build
      - name: Install dependencies
        run: uv sync --all-extras

      - name: Build package
        run: uv build --no-sources

      # Publish to PyPI Test (when rc branch is pushed)
      - name: Publish package to TestPyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/rc')
        run: |
          uv publish --index testpypi

      # Publish to PyPI (when a release is created or a tag is pushed)
      - name: Publish package to PyPI
        if: (github.event_name == 'release' && github.event.action == 'published') || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags'))
        run: uv publish
